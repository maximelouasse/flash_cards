{
    "cards": [
        {
            "answer": "What is the redux store?",
            "response": "The minimal representation of data in the app. A JavaScript object describing everything that can change in your app, including data, and UI changes.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is an action?",
            "response": "A JavaScript object describing a state change. A minimal representation of the state change.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is a reducer?",
            "response": "A pure function that takes the previous state, the action, and returns the next state.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is an action creator?",
            "response": "A function that returns an action.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is middleware?",
            "response": "Code you can put between the framework receiving a request and the framework generating a response.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What should the reducer do if it receives an action it doesn't understand?",
            "response": "Return the state unchanged.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What should the reducer do if it receives a state of undefined?",
            "response": "Return the initial state.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "How do you bring in redux?",
            "response": "import {createStore} from 'redux'",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What are the arguments of createStore?",
            "response": "reducer, [preloadedState], [enhancer]",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does createStore return?",
            "response": "The store.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What are the 3 most important methods of the store?",
            "response": "getState, dispatch, subscribe",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does getState do?",
            "response": "Returns the state.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does dispatch do?",
            "response": "Dispatches an action.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does subscribe do?",
            "response": "Takes a callback that gets called anytime an action is dispatched.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is the difference between splice and slice?",
            "response": "splice mutates the array.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does combineReducers do?",
            "response": "Creates a single reducer from multiple reducers. It takes an object that maps from the part of the state to the reducer for that part of the state.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What property does an action need?",
            "response": "Type.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "How do you use Redux middleware?",
            "response": "Pass applyMiddleware as the enhancer to createStore.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "How can you apply multiple store enhancers to the redux store?",
            "response": "Use compose()",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What are the 3 main things you can import from redux?",
            "response": "createStore, combineReducers, applyMiddleware",
            "visible": true,
            "flip": false
        },
        {
            "answer": "How do you add the store to the context with react-redux?",
            "response": "Wrap the entire app with the Provider component and pass it the store prop.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "How do you access the store with react-redux?",
            "response": "Export a presentational component wrapped in connect. Example: export default connect()(PresentationalComponent);",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What does connect return?",
            "response": "A function that accepts a presentational component and returns a container component.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is a container component?",
            "response": "A component that is subscribed to the store.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What are the arguments to connect?",
            "response": "mapStateToProps, and mapDispatchToProps",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What mapStateToProps?",
            "response": "A function that returns an object. The keys are the props, and the values are the values.",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What are the arguments passed to mapStateToProps?",
            "response": "state, props",
            "visible": true,
            "flip": false
        },
        {
            "answer": "What is mapDispatchToProps?",
            "response": "A function that returns an object. The keys are the props, and the values are the values.",
            "visible": true,
            "flip": false
        }
    ]
}